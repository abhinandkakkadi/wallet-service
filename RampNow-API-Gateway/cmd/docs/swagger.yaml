definitions:
  domain.Transaction:
    properties:
      payee_ramp_id:
        type: string
      payer_ramp_id:
        type: string
      payment_amount:
        type: number
    type: object
  pb.FindUser:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      ramp_id:
        type: string
      user_name:
        type: string
    type: object
  pb.FindUserResponse:
    properties:
      data:
        $ref: '#/definitions/pb.FindUser'
      error:
        type: string
      status:
        type: integer
    type: object
  pb.GetUsersResponse:
    properties:
      error:
        type: string
      status:
        type: integer
      user:
        items:
          $ref: '#/definitions/pb.User'
        type: array
    type: object
  pb.LoginResponse:
    properties:
      access_token:
        type: string
      error:
        type: string
      refressh_token:
        type: string
      status:
        type: integer
    type: object
  pb.RegisterResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  pb.TokenRefreshResponse:
    properties:
      error:
        type: string
      status:
        type: integer
      token:
        type: string
    type: object
  pb.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      ramp_id:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      errors: {}
      message:
        type: string
      status:
        type: boolean
    type: object
  routes.LoginRequestBody:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  routes.RegisterRequestBody:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      ramp_id:
        type: string
    type: object
info:
  contact:
    email: abhinandkr06@gmil.com
    name: API Support
    url: abhinandkakkadi.com
  description: This is RampNow API gateway for a wallet system. You can visit the
    GitHub repository at https://github.com/abhinandkakkadi/wallet-service
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: RampNow API
  version: "1.0"
paths:
  /auth/login:
    post:
      operationId: User Login
      parameters:
      - description: User Login
        in: body
        name: LoginUser
        required: true
        schema:
          $ref: '#/definitions/routes.LoginRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.LoginResponse'
      summary: Login user
      tags:
      - Authentication-Service
  /auth/register:
    post:
      operationId: User Registration
      parameters:
      - description: User registration
        in: body
        name: RegisterUser
        required: true
        schema:
          $ref: '#/definitions/routes.RegisterRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.RegisterResponse'
      summary: Register new user
      tags:
      - Authentication-Service
  /auth/token-refresh:
    post:
      operationId: User RefreshToken
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.TokenRefreshResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.TokenRefreshResponse'
      security:
      - BearerAuth: []
      summary: Refresh token for users
      tags:
      - Authentication-Service
  /payment:
    post:
      operationId: createtransaction
      parameters:
      - description: Transaction Detials
        in: body
        name: transactiondetials
        required: true
        schema:
          $ref: '#/definitions/domain.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Create Transaction
      tags:
      - Payment-service
  /transactions:
    get:
      operationId: Get Transactions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Get Transactions
      tags:
      - Payment-service
  /user/finduser/{id}:
    get:
      operationId: Find user by id
      parameters:
      - description: Find user by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.FindUserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.FindUserResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.FindUserResponse'
      summary: Find user by id
      tags:
      - User-Section
  /user/getusers:
    get:
      operationId: Get users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetUsersResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/pb.GetUsersResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/pb.GetUsersResponse'
      summary: Get users
      tags:
      - User-Section
  /wallet_balance/{id}:
    get:
      operationId: Find wallet by user id
      parameters:
      - description: Find wallet by user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Get Wallet Balance By user id
      tags:
      - Payment-service
swagger: "2.0"
